package Login;

import org.openqa.selenium.By;
import org.openqa.selenium.Cookie;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import java.time.Duration;
import java.util.NoSuchElementException;

public class LogoutTest {
    public static void main(String[] args) {
        System.setProperty("webdriver.chrome.driver", "C:\\Users\\ASUS\\Downloads\\chromedriver-win64\\chromedriver.exe");
        WebDriver driver = new ChromeDriver();

        try {
            // Mở trang đăng nhập
            driver.get("http://localhost:8080/login");

            // Đợi tối đa 10 giây để phần tử xuất hiện
            WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(10));

            // Nhập email
            WebElement emailField = wait.until(ExpectedConditions.visibilityOfElementLocated(By.name("email")));
            emailField.sendKeys("tranthib@example.com");
            System.out.println("Đã nhập email");

            // Nhập mật khẩu
            WebElement passField = wait.until(ExpectedConditions.visibilityOfElementLocated(By.name("password")));
            passField.sendKeys("password123");
            System.out.println("Đã nhập pass");

            // Nhấn nút đăng nhập
            WebElement loginButton = driver.findElement(By.cssSelector("button[type='submit']"));
            loginButton.click();
            System.out.println("Đã nhấn nút ");

            // Chờ phản hồi (thông báo lỗi hoặc chuyển hướng)
            boolean isErrorDisplayed = wait.until(ExpectedConditions.or(
                ExpectedConditions.visibilityOfElementLocated(By.cssSelector("div.alert-danger")),
                ExpectedConditions.urlContains("/") // Kiểm tra nếu đăng nhập thành công
            ));
            System.out.println("Đăng nhập thành công ");
            
         // --- BẮT ĐẦU TEST LOGOUT ---
            try {
                WebDriverWait wait1 = new WebDriverWait(driver, Duration.ofSeconds(15));
                
                // Bước 1: Tìm và click trực tiếp nút logout trong navbar (không có dropdown)
                WebElement logoutButton = wait1.until(ExpectedConditions.elementToBeClickable(
                    By.cssSelector("a.btn.logout-btn[href='/logout']") // Sử dụng selector chính xác
                ));
                
                // Scroll đến nút logout để đảm bảo hiển thị
                ((JavascriptExecutor) driver).executeScript("arguments[0].scrollIntoView(true);", logoutButton);
                Thread.sleep(500); // Chờ animation
                
                logoutButton.click();
                System.out.println("✔ Đã click nút logout");

                // Bước 2: Xác nhận chuyển hướng về trang login
                wait1.until(ExpectedConditions.urlContains("/login"));
                System.out.println("✅ Đăng xuất thành công - Chuyển hướng về trang login");

                // Bước 3: Kiểm tra session cookie
                Cookie sessionCookie = driver.manage().getCookieNamed("JSESSIONID");
                if (sessionCookie == null) {
                    System.out.println("✅ Session cookie đã được xóa");
                } else {
                    System.out.println("❌ Session cookie vẫn tồn tại: " + sessionCookie.getValue());
                }

                // Bước 4: Thử truy cập trang profile để xác nhận
                driver.get("http://localhost:8080/profile");
                if (driver.getCurrentUrl().contains("/login")) {
                    System.out.println("✅ Xác nhận không thể truy cập trang bảo mật");
                } else {
                    System.out.println("❌ Vẫn có thể truy cập khi đã logout");
                }

            } catch (NoSuchElementException e) {
                System.out.println("❌ Không tìm thấy nút logout");
                e.printStackTrace();
            } catch (Exception e) {
                System.out.println("⚠️ Lỗi trong quá trình logout: " + e.getMessage());
                e.printStackTrace();
            }
            
            
            
            // Kiểm tra kết quả
            if (driver.findElements(By.cssSelector("div.alert-danger")).size() > 0) {
System.out.println("❌ Đăng nhập thất bại: Sai email hoặc mật khẩu!");
            } else {
                System.out.println("✅ Kiểm thử thành công!");
            }
        } catch (Exception e) {
            System.out.println("⚠️ Lỗi: " + e.getMessage());
        } finally {
        }
    }
}
