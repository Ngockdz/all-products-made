package CRUD;

import org.junit.Test;
import org.openqa.selenium.*;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.apache.commons.io.FileUtils;

import java.io.File;
import java.io.IOException;
import java.time.Duration;

import static org.junit.Assert.*;

public class TestaddProductById {

    final String PRODUCT_NAME = "New Product Test " + System.currentTimeMillis();
    final String PRODUCT_PRICE = "10000";
    final String PRODUCT_DESCRIPTION = "This is a test product description";
    final String IMAGE_PATH = "D:\\java5\\AsmGD1\\AsmGD1\\asm\\src\\main\\resources\\static\\img\\NikeAirForce1.jpg";

    @Test
    public void testAddProduct() {
        System.setProperty("webdriver.chrome.driver", "C:\\Users\\ASUS\\Downloads\\chromedriver-win64\\chromedriver.exe");
        WebDriver driver = new ChromeDriver();
        WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(25));

        try {
            // [1] LOGIN PROCESS
            driver.get("http://localhost:8080/login");
            
            // Chờ và điền thông tin đăng nhập
            WebElement emailField = wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector("input[name='email']")));
            emailField.sendKeys("admin.nguyen@example.com");
            
            WebElement passField = wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector("input[name='password']")));
            passField.sendKeys("adminpass");
            
            // Submit form đăng nhập
            WebElement loginButton = wait.until(ExpectedConditions.elementToBeClickable(By.cssSelector("button[type='submit']")));
            loginButton.click();
            

            // [2] NAVIGATE TO ADD PRODUCT PAGE
            driver.navigate().to("http://localhost:8080/admin/add-product");

            // [3] FILL PRODUCT FORM
            // Chờ form load hoàn tất
            wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector("form[th\\:action^='/admin']")));

            // Điền tên sản phẩm với scroll và click
            WebElement nameField = wait.until(ExpectedConditions.visibilityOfElementLocated(By.name("nameproduct")));
            scrollAndClick(driver, nameField);
            nameField.sendKeys(PRODUCT_NAME);

            // Điền giá sản phẩm
            WebElement priceField = wait.until(ExpectedConditions.visibilityOfElementLocated(By.name("price")));
            scrollAndClick(driver, priceField);
            priceField.clear();
            priceField.sendKeys(PRODUCT_PRICE);

            // Điền mô tả
            WebElement descField = wait.until(ExpectedConditions.visibilityOfElementLocated(By.name("description")));
            scrollAndClick(driver, descField);
            descField.sendKeys(PRODUCT_DESCRIPTION);

            // Upload ảnh
            WebElement fileInput = wait.until(ExpectedConditions.presenceOfElementLocated(By.name("photoFile")));
            ((JavascriptExecutor) driver).executeScript("arguments[0].style.display = 'block';", fileInput);
            fileInput.sendKeys(IMAGE_PATH);

            // [4] SUBMIT FORM
            WebElement submitButton = wait.until(ExpectedConditions.elementToBeClickable(
                By.cssSelector("button.btn-primary[type='submit']")
            ));
            scrollAndClick(driver, submitButton);

            // [5] VERIFICATION
            // Chờ chuyển hướng và kiểm tra
            wait.until(ExpectedConditions.urlToBe("http://localhost:8080/adminproducts"));
            
            // Kiểm tra sản phẩm mới
            WebElement newProduct = wait.until(ExpectedConditions.visibilityOfElementLocated(
                By.xpath("//h5[contains(text(), '" + PRODUCT_NAME + "')]")
            ));
            assertTrue("Sản phẩm không hiển thị", newProduct.isDisplayed());

        } catch (Exception e) {
            takeScreenshot(driver, "error");
            fail("Test thất bại: " + e.getMessage());
        } finally {
            if (driver != null) {
                driver.quit();
            }
        }
    }

    private void scrollAndClick(WebDriver driver, WebElement element) {
        ((JavascriptExecutor) driver).executeScript(
            "arguments[0].scrollIntoView({behavior: 'smooth', block: 'center'});", 
            element
        );
        ((JavascriptExecutor) driver).executeScript("arguments[0].click();", element);
        try {
            Thread.sleep(300);
        } catch (InterruptedException e) {
            Thread.currentThread().interrupt();
        }
    }

    private void takeScreenshot(WebDriver driver, String fileName) {
        try {
            File screenshot = ((TakesScreenshot) driver).getScreenshotAs(OutputType.FILE);
            FileUtils.copyFile(screenshot, new File(fileName + "_screenshot.png"));
        } catch (IOException e) {
            System.err.println("Không thể chụp màn hình: " + e.getMessage());
        }
    }
}